--- /root/.local/venvs/pipenv/lib/python3.5/site-packages/pipenv/cli.py 2017-03-31 09:20:36.733171224 +0000
+++ pipenv+cli.py       2017-03-31 09:17:57.740249027 +0000
@@ -242,7 +242,7 @@
 
     # pip install:
     with spinner():
-        c = pip_install(r=hashed_deps_path, ignore_hashes=ignore_hashes, allow_global=allow_global)
+        c = pip_install(r=hashed_deps_path, ignore_hashes=ignore_hashes, allow_global=allow_global, capture_stdio=False)
 
     if c.return_code != 0:
         click.echo(crayons.red('An error occured while installing!'))
@@ -250,11 +250,11 @@
         click.echo(crayons.yellow('You can supply the --ignore-hashes option to \'pipenv install\' to bypass this feature.'))
         sys.exit(c.return_code)
 
-    if not bare:
-        click.echo(crayons.blue(format_pip_output(c.out, r=hashed_deps_path)))
+    #if not bare:
+    #    click.echo(crayons.blue(format_pip_output(c.out, r=hashed_deps_path)))

     with spinner():
-        c = pip_install(r=vcs_deps_path, ignore_hashes=True, allow_global=allow_global)
+        c = pip_install(r=vcs_deps_path, ignore_hashes=True, allow_global=allow_global, capture_stdio=False)
 
     if c.return_code != 0:
         click.echo(crayons.red('An error occured while installing!'))
@@ -262,8 +262,8 @@
         click.echo(crayons.yellow('You can supply the --ignore-hashes option to pip install to bypass this feature.'))
         sys.exit(c.return_code)
 
-    if not bare:
-        click.echo(crayons.blue(format_pip_output(c.out, r=vcs_deps_path)))
+    #if not bare:
+    #    click.echo(crayons.blue(format_pip_output(c.out, r=vcs_deps_path)))
 
     # Cleanup the temp requirements file.
     if requirements:
@@ -589,7 +589,7 @@
     do_activate_virtualenv()
 
 
-def pip_install(package_name=None, r=None, allow_global=False, ignore_hashes=False):
+def pip_install(package_name=None, r=None, allow_global=False, ignore_hashes=False, capture_stdio=True):
     # try installing for each source in project.sources
     for source in project.sources:
         if r:
@@ -609,7 +609,10 @@
         if not ignore_hashes:
             install_reqs += ' --require-hashes'
 
-        c = delegator.run('"{0}" install {1} -i {2}'.format(which_pip(allow_global=allow_global), install_reqs, source['url']))
+        if capture_stdio:
+            c = delegator.run('"{0}" install {1} -i {2}'.format(which_pip(allow_global=allow_global), install_reqs, source['url']))
+        else:
+            c = delegator.run('"{0}" install {1} -i {2}'.format(which_pip(allow_global=allow_global), install_reqs, source['url']), stdout=None, stderr=None)
 
         if c.return_code == 0:
             break
